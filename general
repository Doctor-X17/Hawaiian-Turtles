

#include <EEPROM.h>
#include <LiquidTWI.h>
#include <Wire.h>
#include <SdFat.h>

LiquidTWI lcd(0);
SdFat sd;
SdFile myFile;

// Pin Setup
const int aer = 14;
const int slu = 13;
const int cwp = 12;
const int sw1 = A3;
const int sw2 = 2;
const int amp = A0;
const int volt = 3;
const int siren = A1;
const int sirena = 23;
const int light = A2;
const int but1 = 0;
const int but2 = 20;
const int but3 = 18;
const int but4 = 19;
const int chipSelect = 4;

// EEPROM Addresses

const int versionAddr = 0;
const int delayedStartAddr = 1;


//Defaults

const int fillTimeAwayDefault = 3;
const int fillTimeVacaDefault = 10;
const int sluReturnTimeDefault = 15;
const int aerTimeHomeDefault = 12;
const int aerTimeAwayDefault = 1;
const int cwpTimeDefault = 30;
const int cycleHoursDefault = 8;
const int denitPulseDelay = 3000;

int startVerify;

// Strings

String switchStr = "1Aer 2Slu 3CWP";
String cwpStr = "3CWP    ";

int butPins[] = { but1, but2, but3, but4 };
int butPinCount = 4;

void setup() {
  lcd.begin(16,2);
  lcd.setBacklight(HIGH);
  lcd.clear();
  lcd.print("PekaSys Bubbler");
  pinMode(aer, OUTPUT);
  pinMode(slu, OUTPUT);
  pinMode(cwp, OUTPUT);
  pinMode(sw1, INPUT_PULLUP);
  pinMode(sw2, INPUT_PULLUP);
  pinMode(but1, INPUT_PULLUP);
  pinMode(but2, INPUT_PULLUP);
  pinMode(but3, INPUT_PULLUP);
  pinMode(but4, INPUT_PULLUP);  
  /*int startup = EEPROM.read(delayedStartAddr);
  if (startup == 1) {
    lcd.print("Ready for water");
    lcd.setCursor(0,1);
    lcd.print("Test pumps 1-3");
    while (digitalRead(sw1) == HIGH) {
      delay(5000);
    }
    lcd.clear();
    lcd.print("Water detected");
    lcd.setCursor(0,1);
    lcd.print("Starting");
    startVerify = 0;
    while (startVerify < 900) {
      delay(1000);
      startVerify++;
    }
    EEPROM.write(delayedStartAddr, 2);
    lcd.clear();
    lcd.print("System Started");
  } */
  
}

void loop() {

}
// ----------  clean up  ------------
  lcd.setCursor(0,0);
  lcd.print("Filling         ");
  digitalWrite(slu, HIGH);
  delay(1000); // 3000
  digitalWrite(slu, LOW);
  delay(1800); //180000
 
  boolean switchState = digitalRead(sw1);
  if (switchState == HIGH) {
    digitalWrite(aer, HIGH);
    lcd.setCursor(0,0);
    lcd.print("Aeration Lite   ");
    menuDelay(6); // 60   // aerate for a minute
    digitalWrite(aer, LOW);
    lcd.setCursor(0,0);
    lcd.print("Idle            ");
    menuDelay(3); // 3600 wait an hour
  }
  else {
    for(int cyc = 0; cyc < 3; cyc++) {
      if(cyc > 0) {
        digitalWrite(slu, HIGH);
        lcd.setCursor(0,0);
        lcd.print("Filling         ");
        delay(3000);
        digitalWrite(slu, LOW);
        menuDelay(1); // 180
      }
      digitalWrite(aer, HIGH);
      lcd.setCursor(0,0);
      lcd.print("Aeration        ");
      delay(900); //90000
      digitalWrite(aer, LOW);
      lcd.setCursor(0,0);
      lcd.print("Idle            ");
      menuDelay(9); //900
      digitalWrite(aer, HIGH);
      lcd.setCursor(0,0);
      lcd.print("Denit          ");
      delay(3000);
      digitalWrite(aer, LOW);
      lcd.setCursor(0,0);
      lcd.print("Idle            ");
      menuDelay(9); //900
      digitalWrite(aer, HIGH);
      lcd.setCursor(0,0);
      lcd.print("Denit          ");
      delay(3000);
      digitalWrite(aer, LOW);
      lcd.setCursor(0,0);
      lcd.print("Idle            ");
      menuDelay(3); 
     }
    menuDelay(6); // 6000
    int alarmCount = 0; 
    lcd.setCursor(0,0);
    lcd.print("Denit           ");
    while(digitalRead(sw1) == LOW) {
      digitalWrite(cwp, HIGH);
      delay(1000);
      alarmCount++;
      if(alarmCount < 1800) {
        digitalWrite(light, HIGH);
        lcd.setCursor(0,1);
        lcd.print("Clear Water Err");
        break;
      }
      }
    }

// ----------  clean up  ------------

//********************************************
void menu() {
  byte buttonPressed = checkButtons();
    if (buttonPressed == but1) {
      lcd.clear();
      lcd.print(switchStr);
      for(int menuTime = 0; menuTime < 60; menuTime++) {
        int menu1 = checkButtons();
        if (menu1 == but1) {
          digitalWrite(aer, HIGH);
          lcd.clear();
          lcd.print("Aer on");
          for (int aerTimer = 0; aerTimer < 1200; aerTimer++); {
            boolean aerSwitchState = digitalRead(but1);
            if (aerSwitchState == LOW) {
              digitalWrite(aer, LOW);
              lcd.clear();
              break;
            }
            delay(500);
          }
        digitalWrite(aer, LOW);
        lcd.clear();
        delay(500);
    }
      if (menu1 == but2) {
          digitalWrite(slu, HIGH);
          lcd.clear();
          lcd.print("Slu on");
          for (int sluTimer = 0; sluTimer < 1200; sluTimer++); {
            boolean sluSwitchState = digitalRead(but2);
            if (sluSwitchState == LOW) {
              digitalWrite(slu, LOW);
              lcd.clear();
              break;
            }
            delay(500);
          }
        digitalWrite(slu, LOW);
        lcd.clear();
        delay(500);
    }
    
    if (menu1 == but3) {
          digitalWrite(cwp, HIGH);
          lcd.clear();
          lcd.print("CWP on");
          for (int cwpTimer = 0; cwpTimer < 1200; cwpTimer++); {
            boolean cwpSwitchState = digitalRead(but3);
            if (cwpSwitchState == LOW) {
              digitalWrite(cwp, LOW);
              lcd.clear();
              break;
            }
            delay(500);
          }
        digitalWrite(cwp, LOW);
        lcd.clear();
        delay(500);
    }
      }
 
}
}

//********************************************
void menuDelay(int numSecs) { 
  unsigned long menuDelayCount = numSecs * 5;
  for (unsigned long xi=0; xi < menuDelayCount; xi++) {
    boolean menuButtonState = digitalRead(but1);
    if (menuButtonState == LOW) {
      menu(); 
    }
   delay(200);
  }
}
//********************************************
byte checkButtons() { // checks for button press and executes action
  if(digitalRead(but1) == LOW) {
    lcd.clear();
    delay(300);
    return but1;
  }
  else if(digitalRead(but2) == LOW) {
    lcd.clear();
    delay(300);
    return but2;
  }
  else if(digitalRead(but3) == LOW) {
    lcd.clear();
    delay(300);
    return but3;
  }
  else {
    return 100;
  }
}
//********************************************
void print8(String string, byte scrnLine) {
  lcd.setCursor(0, scrnLine);
  lcd.print(string);
}
