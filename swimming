//Turtles are cool.


#include <EEPROM.h>
#include <LiquidTWI.h>
#include <Wire.h>
#include <SdFat.h>

LiquidTWI lcd(0);
SdFat sd;
SdFile myFile;

int filTime = 3000; // milliseconds that the fill pump is on for pulse
int filPause = 180; // number of seconds between fill pulse and end

int butPins[] = { but1, but2, but3, but4 };
int butPinCount = 4;

// Pin Setup
const int aer = 14;
const int slu = 13;
const int cwp = 12;
const int sw1 = A3;
const int sw2 = 2;
const int amp = A0;
const int volt = 3;
const int siren = A1;
const int sirena = 23;
const int light = A2;
const int but1 = 0;
const int but2 = 20;
const int but3 = 18;
const int but4 = 19;
const int chipSelect = 4;

// EEPROM Addresses

const int versionAddr = 0;
const int delayedStartAddr = 1;


// Defaults

const int fillTimeAwayDefault = 3;
const int fillTimeVacaDefault = 10;
const int sluReturnTimeDefault = 15;
const int aerTimeHomeDefault = 12;
const int aerTimeAwayDefault = 1;
const int cwpTimeDefault = 30;
const int cycleHoursDefault = 8;
const int denitPulseDelay = 3000;

// Strings
String switchStr = "1Aer 2Slu 3CWP";
String cwpStr = "3CWP    ";
String filString = "Filling "; // 8 POS



void setup() {

  lcd.begin(16,2);
  lcd.setBacklight(HIGH);
  lcd.clear();
  lcd.print("PekaSys Bubbler");
  pinMode(aer, OUTPUT);
  pinMode(slu, OUTPUT);
  pinMode(cwp, OUTPUT);
  pinMode(sw1, INPUT_PULLUP);
  pinMode(sw2, INPUT_PULLUP);
  pinMode(but1, INPUT_PULLUP);
  pinMode(but2, INPUT_PULLUP);
  pinMode(but3, INPUT_PULLUP);
  pinMode(but4, INPUT_PULLUP);  
  
  
}
  
void loop() {

}



//********************************************
byte checkButtons() { // checks for button press and executes action
  if(digitalRead(but1) == LOW) {
    lcd.clear();
    delay(300);
    return but1;
  }
  else if(digitalRead(but2) == LOW) {
    lcd.clear();
    delay(300);
    return but2;
  }
  else if(digitalRead(but3) == LOW) {
    lcd.clear();
    delay(300);
    return but3;
  }
  else {
    return 100;
  }
}

//********************************************
void filling() {

  lcd.setCursor(0,0);
  lcd.print(filString);
  digitalWrite(slu, HIGH);
  delay(filTime); // 1000 --> 3000
  digitalWrite(slu, LOW);
  menuDelay(filPause); // 180
}
  
//********************************************
void menuDelay(int numSecs) { 
  unsigned long menuDelayCount = numSecs * 5;
  for (unsigned long xi=0; xi < menuDelayCount; xi++) {
    boolean menuButtonState = digitalRead(but1);
    if (menuButtonState == LOW) {
      menu(); 
    }
   delay(200);
  }
}

//********************************************



